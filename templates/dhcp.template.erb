# ******************************************************************
# Cobbler managed dhcpd.conf file
#
# generated from cobbler dhcp.conf template ($date)
# Do NOT make changes to /etc/dhcpd.conf. Instead, make your changes
# in /etc/cobbler/dhcp.template, as /etc/dhcpd.conf will be
# overwritten.
#
# /etc/cobbler/dhcp.template is managed by puppet
#
# ******************************************************************

ddns-update-style interim;

allow booting;
allow bootp;

ignore client-updates;
set vendorclass = option vendor-class-identifier;

option pxe-system-type code 93 = unsigned integer 16;

<% unless @interfaces == '' or @interfaces.nil? -%>
<% @interfaces.each do |iface| -%>
subnet <%= instance_variable_get("@network_#{iface}") %> netmask <%= instance_variable_get("@netmask_#{iface}") %> {
    option domain-name          "<%= @domain %>";
    option subnet-mask          <%= instance_variable_get("@netmask_#{iface}") %>;
    option domain-name-servers  <%=
if @nameservers.kind_of?(Array)
   @nameservers.join(", ")
elsif (@nameservers.kind_of?(String) && @nameservers != '' )
   @nameservers
else
   puts("127.0.0.1")
end %>;
    option routers              <%= instance_variable_get("@ipaddress_#{iface}").match(/\d+\.\d+\.\d+/) %>.1;
    filename                    "/pxelinux.0";
<% if @dynamic_range == '1' then -%>
    range dynamic-bootp         <%= instance_variable_get("@ipaddress_#{iface}").match(/\d+\.\d+\.\d+/) %>.100 <%= instance_variable_get("@ipaddress_#{iface}").match(/\d+\.\d+\.\d+/) %>.200;
<% end -%>
    default-lease-time          21600;
    max-lease-time              43200;
    next-server                 $next_server;
}
<% end -%>
<% end -%>
<% unless @subnets == '' or @subnets.nil? -%>
<% @subnets.each do |dhcp_subnet| -%>
<% dhcp_subnet_split   = dhcp_subnet.split('/') -%>
subnet <%= dhcp_subnet_split[0] %> netmask <%= dhcp_subnet_split[1] %> {
    option domain-name          "<%= @domain %>";
    option subnet-mask          <%= dhcp_subnet_split[1]%>;
    option domain-name-servers  <%=
if @nameservers.kind_of?(Array)
   @nameservers.join(", ")
elsif (@nameservers.kind_of?(String) && @nameservers != '' )
   @nameservers
else
   puts("127.0.0.1")
end %>;
    option routers              <%= dhcp_subnet_split[0].match(/\d+\.\d+\.\d+/) %>.<%= dhcp_subnet_split[0].sub(/\d+\.\d+\.\d+\./, '').to_i + 1 %>;
    filename                    "/pxelinux.0";
    default-lease-time          21600;
    max-lease-time              43200;
    next-server                 $next_server;
}
<% end -%>
<% end -%>

#for dhcp_tag in $dhcp_tags.keys():
    ## group could be subnet if your dhcp tags line up with your subnets
    ## or really any valid dhcpd.conf construct ... if you only use the
    ## default dhcp tag in cobbler, the group block can be deleted for a
    ## flat configuration
# group for Cobbler DHCP tag: $dhcp_tag
group {
        #for mac in $dhcp_tags[$dhcp_tag].keys():
            #set iface = $dhcp_tags[$dhcp_tag][$mac]
    host $iface.name {
        #if $iface.interface_type == "infiniband":
        option dhcp-client-identifier = $mac;
        #else
        hardware ethernet $mac;
        #end if
        #if $iface.ip_address:
        fixed-address $iface.ip_address;
        #end if
        #if $iface.hostname:
        option host-name "$iface.hostname";
        #end if
        #if $iface.netmask:
        option subnet-mask $iface.netmask;
        #end if
        #if $iface.gateway:
        option routers $iface.gateway;
        #end if
        #if $iface.enable_gpxe:
        if exists user-class and option user-class = "gPXE" {
            filename "http://$cobbler_server/cblr/svc/op/gpxe/system/$iface.owner";
        } else if exists user-class and option user-class = "iPXE" {
            filename "http://$cobbler_server/cblr/svc/op/gpxe/system/$iface.owner";
        } else {
            filename "undionly.kpxe";
        }
        #else
        filename "$iface.filename";
        #end if
        ## Cobbler defaults to $next_server, but some users
        ## may like to use $iface.system.server for proxied setups
        next-server $next_server;
        ## next-server $iface.next_server;
    }
        #end for
}
#end for

